name: 'Build and Push Docker Image'
description: 'Build and push a Docker image to the registry'

inputs:
  registry:
    description: 'Container registry URL'
    required: true
  registry-username:
    description: 'Registry username'
    required: true
  registry-password:
    description: 'Registry password'
    required: true
  image-name:
    description: 'Image name (e.g., backend, frontend)'
    required: true
  context:
    description: 'Docker build context path'
    required: true
    default: '.'
  dockerfile:
    description: 'Path to Dockerfile'
    required: true
  platforms:
    description: 'Target platforms (comma-separated)'
    required: false
    default: 'linux/amd64'

outputs:
  tags:
    description: 'Generated image tags'
    value: ${{ steps.meta.outputs.tags }}
  digest:
    description: 'Image digest'
    value: ${{ steps.build.outputs.digest }}

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: ${{ inputs.platforms }}
