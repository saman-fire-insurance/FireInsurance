name: Deploy to Stage

on:
  push:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  # TODO: Replace with your actual registry
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.repository_owner }}
  BACKEND_IMAGE_NAME: ${{ github.repository }}/backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}/frontend
  ENVIRONMENT: stage
  NAMESPACE: fireinsurance-stage

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: stage
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Retrieve secrets from Vault
        uses: hashicorp/vault-action@v3
        with:
          method: jwt
          url: https://noyanvault.paratechco.com
          role: github-actions
          secrets: |
            secret/data/fireinsurance/k8s kubeconfig | KUBECONFIG_CONTENT ;
            secret/data/fireinsurance/stage database_connection_string | DATABASE_CONNECTION_STRING ;
            secret/data/fireinsurance/stage jwt_signing_key | JWT_SIGNING_KEY ;
            secret/data/fireinsurance/stage sms_provider_base_url | SMS_PROVIDER_BASE_URL ;
            secret/data/fireinsurance/stage sms_provider_username | SMS_PROVIDER_USERNAME ;
            secret/data/fireinsurance/stage sms_provider_password | SMS_PROVIDER_PASSWORD ;
            secret/data/fireinsurance/stage saman_services_base_url | SAMAN_SERVICES_BASE_URL ;
            secret/data/fireinsurance/stage saman_services_key | SAMAN_SERVICES_KEY ;
            secret/data/fireinsurance/stage nextauth_secret | NEXTAUTH_SECRET ;
            secret/data/fireinsurance/stage recaptcha_site_key | RECAPTCHA_SITE_KEY

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG_CONTENT" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Test kubectl connection
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Set up Kustomize
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          sudo mv kustomize /usr/local/bin/

      - name: Update kustomization with image tags
        run: |
          cd infra/k8s/overlays/stage

          # Set image tags to git commit SHA
          IMAGE_TAG="${GITHUB_SHA::7}"

          # Update backend image
          kustomize edit set image backend=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:main-${IMAGE_TAG}

          # Update frontend image
          kustomize edit set image frontend=${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:main-${IMAGE_TAG}

          cat kustomization.yaml

      - name: Create/Update secrets in Kubernetes
        run: |
          # Create namespace if it doesn't exist
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

          # Create/update backend secrets
          kubectl create secret generic backend-secrets \
            --from-literal=database-connection-string="${DATABASE_CONNECTION_STRING}" \
            --from-literal=jwt-signing-key="${JWT_SIGNING_KEY}" \
            --from-literal=sms-provider-base-url="${SMS_PROVIDER_BASE_URL}" \
            --from-literal=sms-provider-username="${SMS_PROVIDER_USERNAME}" \
            --from-literal=sms-provider-password="${SMS_PROVIDER_PASSWORD}" \
            --from-literal=saman-services-base-url="${SAMAN_SERVICES_BASE_URL}" \
            --from-literal=saman-services-key="${SAMAN_SERVICES_KEY}" \
            --namespace=${{ env.NAMESPACE }} \
            --dry-run=client -o yaml | kubectl apply -f -

          # Create/update frontend secrets
          kubectl create secret generic frontend-secrets \
            --from-literal=nextauth-secret="${NEXTAUTH_SECRET}" \
            --from-literal=recaptcha-site-key="${RECAPTCHA_SITE_KEY}" \
            --namespace=${{ env.NAMESPACE }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to Kubernetes
        run: |
          cd infra/k8s/overlays/stage
          kustomize build . | kubectl apply -f -

      - name: Wait for deployment to be ready
        run: |
          kubectl rollout status deployment/backend -n ${{ env.NAMESPACE }} --timeout=5m
          kubectl rollout status deployment/frontend -n ${{ env.NAMESPACE }} --timeout=5m

      - name: Verify deployment
        run: |
          kubectl get pods -n ${{ env.NAMESPACE }}
          kubectl get services -n ${{ env.NAMESPACE }}
          kubectl get deployments -n ${{ env.NAMESPACE }}

      - name: Deployment summary
        if: always()
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ env.ENVIRONMENT }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Namespace**: ${{ env.NAMESPACE }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend Image**: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:main-${GITHUB_SHA::7}" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend Image**: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:main-${GITHUB_SHA::7}" >> $GITHUB_STEP_SUMMARY
