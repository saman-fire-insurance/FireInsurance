name: Cleanup PR Preview

on:
  pull_request:
    types: [closed]
    branches: [main, master]

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment variables
        id: env
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          NAMESPACE="fireinsurance-pr-${PR_NUMBER}"

          echo "pr_number=${PR_NUMBER}" >> $GITHUB_OUTPUT
          echo "namespace=${NAMESPACE}" >> $GITHUB_OUTPUT

          echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_ENV
          echo "NAMESPACE=${NAMESPACE}" >> $GITHUB_ENV

      - name: Retrieve secrets from Vault
        uses: hashicorp/vault-action@v3
        with:
          method: jwt
          url: https://noyanvault.paratechco.com
          role: github-actions
          secrets: |
            secret/data/fireinsurance/preview kubeconfig | KUBECONFIG_CONTENT

      - name: Setup Kubernetes tools
        uses: ./.github/actions/setup-k8s-tools

      - name: Configure kubectl
        uses: ./.github/actions/configure-kubectl
        with:
          kubeconfig-content: ${{ env.KUBECONFIG_CONTENT }}

      - name: Delete deployments and services
        run: |
          echo "🧹 Cleaning up preview environment for PR #${{ env.PR_NUMBER }}..."

          # Check if namespace exists
          if ! kubectl get namespace ${{ env.NAMESPACE }} &> /dev/null; then
            echo "ℹ️ Namespace ${{ env.NAMESPACE }} does not exist, nothing to clean up"
            exit 0
          fi

          echo "📦 Deleting resources in namespace ${{ env.NAMESPACE }}..."

          # Delete deployments
          if kubectl get deployments -n ${{ env.NAMESPACE }} &> /dev/null; then
            echo "Deleting deployments..."
            kubectl delete deployments --all -n ${{ env.NAMESPACE }} --timeout=2m || true
          fi

          # Delete services
          if kubectl get services -n ${{ env.NAMESPACE }} &> /dev/null; then
            echo "Deleting services..."
            kubectl delete services --all -n ${{ env.NAMESPACE }} --timeout=1m || true
          fi

          # Delete pods (in case any are orphaned)
          if kubectl get pods -n ${{ env.NAMESPACE }} &> /dev/null; then
            echo "Deleting pods..."
            kubectl delete pods --all -n ${{ env.NAMESPACE }} --timeout=1m || true
          fi

          echo "✅ Resources deleted successfully"

      - name: Verify cleanup
        run: |
          echo "📊 Verifying cleanup..."

          # Check if namespace still exists
          if kubectl get namespace ${{ env.NAMESPACE }} &> /dev/null; then
            echo "Remaining resources in namespace:"
            kubectl get all -n ${{ env.NAMESPACE }} || echo "No resources found"

            PODS=$(kubectl get pods -n ${{ env.NAMESPACE }} --no-headers 2>/dev/null | wc -l)
            SERVICES=$(kubectl get services -n ${{ env.NAMESPACE }} --no-headers 2>/dev/null | wc -l)
            DEPLOYMENTS=$(kubectl get deployments -n ${{ env.NAMESPACE }} --no-headers 2>/dev/null | wc -l)

            echo "- Pods: $PODS"
            echo "- Services: $SERVICES"
            echo "- Deployments: $DEPLOYMENTS"

            if [ "$PODS" -eq 0 ] && [ "$SERVICES" -eq 0 ] && [ "$DEPLOYMENTS" -eq 0 ]; then
              echo "✅ All main resources cleaned up successfully"
            else
              echo "⚠️ Some resources may still exist"
            fi
          else
            echo "ℹ️ Namespace ${{ env.NAMESPACE }} does not exist"
          fi

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = ${{ env.PR_NUMBER }};
            const namespace = '${{ env.NAMESPACE }}';

            const comment = `## 🧹 Preview Environment Cleaned Up

            The preview environment resources for this PR have been deleted.

            **Cleaned up:**
            - **Namespace**: \`${namespace}\`
            - Deleted all deployments, pods, and services

            **Note**: The namespace itself is preserved (may contain configmaps, secrets, etc.)
            `;

            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Cleanup summary
        if: always()
        run: |
          echo "## PR Preview Cleanup Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **PR Number**: #${{ env.PR_NUMBER }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Namespace**: ${{ env.NAMESPACE }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Cleaned Resources**: Deployments, Pods, Services" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Cleanup completed ✅" >> $GITHUB_STEP_SUMMARY
