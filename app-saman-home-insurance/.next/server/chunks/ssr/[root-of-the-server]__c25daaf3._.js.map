{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/matta/Desktop/Projects/saman-home-insurance/src/components/session-provider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/session-provider.tsx <module evaluation>\",\n    \"Providers\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,uYAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/matta/Desktop/Projects/saman-home-insurance/src/components/session-provider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/session-provider.tsx\",\n    \"Providers\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,uYAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/iransans_65703671.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"iransans_65703671-module__W_LjXa__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/matta/Desktop/Projects/saman-home-insurance/src/app/iransans_65703671.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/local/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22%22,%22arguments%22:[{%22src%22:[{%22path%22:%22../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum)_Black.woff2%22,%22weight%22:%22900%22,%22style%22:%22normal%22},{%22path%22:%22../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum)_Bold.woff2%22,%22weight%22:%22700%22,%22style%22:%22normal%22},{%22path%22:%22../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum)_Medium.woff2%22,%22weight%22:%22500%22,%22style%22:%22normal%22},{%22path%22:%22../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum)_Light.woff2%22,%22weight%22:%22300%22,%22style%22:%22normal%22},{%22path%22:%22../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum)_UltraLight.woff2%22,%22weight%22:%22200%22,%22style%22:%22normal%22},{%22path%22:%22../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum).woff2%22,%22weight%22:%22400%22,%22style%22:%22normal%22}],%22preload%22:true,%22display%22:%22swap%22}],%22variableName%22:%22iranSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'iranSans', 'iranSans Fallback'\",\n        \n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,sJAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;IAEhB;AACJ;AAEA,IAAI,sJAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,sJAAS,CAAC,QAAQ;AAC1C;uCAEe","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/matta/Desktop/Projects/saman-home-insurance/src/lib/api-error-handler.ts"],"sourcesContent":["/**\r\n * Comprehensive API error handler utility\r\n * Handles various error structures including arrays, Ardalis Result patterns, and different API response formats\r\n */\r\n\r\n// Helper function to safely get error message from various structures\r\nconst extractErrorMessage = (obj: any): string | null => {\r\n  if (!obj) return null;\r\n  \r\n  // Check if obj is an array, process each item\r\n  if (Array.isArray(obj)) {\r\n    const errorMessages: string[] = [];\r\n    \r\n    for (const item of obj) {\r\n      if (item && typeof item === 'object') {\r\n        // Check for errorMessage property (our target)\r\n        if (typeof item.errorMessage === 'string' && item.errorMessage.trim()) {\r\n          errorMessages.push(item.errorMessage);\r\n        }\r\n        // Check for other properties if errorMessage is not found\r\n        else if (typeof item.detail === 'string' && item.detail.trim()) {\r\n          errorMessages.push(item.detail);\r\n        }\r\n        else if (typeof item.message === 'string' && item.message.trim()) {\r\n          errorMessages.push(item.message);\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (errorMessages.length > 0) {\r\n      return errorMessages.join('\\n');\r\n    }\r\n  }\r\n  \r\n  // Normalize common casing differences (FastEndpoints often uses capital keys)\r\n  const errorsKey = (obj.errors ?? obj.Errors) as any;\r\n  const messageKey = obj.message ?? obj.Message;\r\n  const detailKey = obj.detail ?? obj.Detail;\r\n  const titleKey = obj.title ?? obj.Title;\r\n  const statusKey = obj.status ?? obj.Status ?? obj.statusCode ?? obj.StatusCode;\r\n\r\n  // Check for Ardalis/FastEndpoints Result pattern - errors array (objects or strings)\r\n  if (errorsKey && Array.isArray(errorsKey)) {\r\n    const errorMessages: string[] = [];\r\n    \r\n    for (const error of errorsKey) {\r\n      if (error && typeof error === 'object') {\r\n        // Check for errorMessage property (our target)\r\n        if (typeof error.errorMessage === 'string' && error.errorMessage.trim()) {\r\n          errorMessages.push(error.errorMessage);\r\n        }\r\n        // Check for other properties if errorMessage is not found\r\n        else if (typeof error.detail === 'string' && error.detail.trim()) {\r\n          errorMessages.push(error.detail);\r\n        }\r\n        else if (typeof error.message === 'string' && error.message.trim()) {\r\n          errorMessages.push(error.message);\r\n        }\r\n        // Check for value property (common in Ardalis Result)\r\n        else if (typeof error.value === 'string' && error.value.trim()) {\r\n          errorMessages.push(error.value);\r\n        }\r\n        // Check for code/description tuple (common in FastEndpoints validation)\r\n        else if (typeof (error.description ?? error.Description) === 'string') {\r\n          errorMessages.push(String(error.description ?? error.Description));\r\n        }\r\n      } else if (typeof error === 'string' && error.trim()) {\r\n        // Ardalis sometimes returns array of strings\r\n        errorMessages.push(error);\r\n      }\r\n    }\r\n    \r\n    if (errorMessages.length > 0) {\r\n      return errorMessages.join('\\n');\r\n    }\r\n  }\r\n  \r\n  // Check for Ardalis Result pattern - isSuccess = false with single error\r\n  if (obj.isSuccess === false) {\r\n    // Check for single error object\r\n    if (obj.error && typeof obj.error === 'object') {\r\n      const errorMsg = extractErrorMessage(obj.error);\r\n      if (errorMsg) return errorMsg;\r\n    }\r\n    \r\n    // Check for error message directly\r\n    if (typeof obj.errorMessage === 'string' && obj.errorMessage.trim()) {\r\n      return obj.errorMessage;\r\n    }\r\n    \r\n    // Check for value property (common in failed Ardalis Results)\r\n    if (typeof obj.value === 'string' && obj.value.trim()) {\r\n      return obj.value;\r\n    }\r\n  }\r\n  \r\n  // Check for errorMessage property (our target)\r\n  if (typeof obj.errorMessage === 'string' && obj.errorMessage.trim()) {\r\n    return obj.errorMessage;\r\n  }\r\n  \r\n  // Check for validation errors object (lower/upper-case keys)\r\n  if (errorsKey && typeof errorsKey === 'object' && !Array.isArray(errorsKey)) {\r\n    const validationErrors = Object.values(errorsKey).flat().join(\"\\n\");\r\n    if (validationErrors.trim()) {\r\n      return `خطاهای اعتبارسنجی:\\n${validationErrors}`;\r\n    }\r\n  }\r\n  \r\n  // ProblemDetails style\r\n  if (typeof detailKey === 'string' && detailKey.trim()) {\r\n    return detailKey;\r\n  }\r\n  \r\n  // Message style\r\n  if (typeof messageKey === 'string' && messageKey.trim()) {\r\n    return messageKey;\r\n  }\r\n\r\n  // Combine title + status\r\n  if (titleKey && statusKey) {\r\n    return `${titleKey} (${statusKey})`;\r\n  }\r\n  \r\n  return null;\r\n};\r\n\r\n/**\r\n * Main API error handler function\r\n * @param error - The error object from API calls\r\n * @param defaultMessage - Default message to show if no specific error is found\r\n * @returns Formatted error message string with preserved status codes\r\n */\r\nexport const handleApiError = (error: any, defaultMessage: string = \"خطایی رخ داد. لطفا دوباره تلاش کنید.\"): string => {\r\n  console.log(\"Handling API error:\", error);\r\n  \r\n  // Preserve specific error codes like 429 (Too Many Requests)\r\n  if (error?.status === 429) {\r\n    return \"درخواست‌های زیادی ارسال شده است. لطفا کمی صبر کنید و دوباره تلاش کنید.\";\r\n  }\r\n  \r\n  // 1. Check ApiError body (swagger-generated errors)\r\n  if (error?.body) {\r\n    const message = extractErrorMessage(error.body);\r\n    if (message) {\r\n      console.log(\"Found error in error.body:\", message);\r\n      return message;\r\n    }\r\n  }\r\n  \r\n  // 2. Check if error itself has the properties\r\n  const directMessage = extractErrorMessage(error);\r\n  if (directMessage) {\r\n    console.log(\"Found error in error object:\", directMessage);\r\n    return directMessage;\r\n  }\r\n  \r\n  // 3. Check response.body structure\r\n  if (error?.response?.body) {\r\n    const message = extractErrorMessage(error.response.body);\r\n    if (message) {\r\n      console.log(\"Found error in error.response.body:\", message);\r\n      return message;\r\n    }\r\n  }\r\n  \r\n  // 4. Check if body is a string and try to parse it\r\n  if (typeof error?.body === 'string') {\r\n    try {\r\n      const parsed = JSON.parse(error.body);\r\n      const message = extractErrorMessage(parsed);\r\n      if (message) {\r\n        console.log(\"Found error in parsed body:\", message);\r\n        return message;\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Failed to parse error body as JSON\");\r\n    }\r\n  }\r\n  \r\n  // 5. Check if response.body is a string and try to parse it\r\n  if (typeof error?.response?.body === 'string') {\r\n    try {\r\n      const parsed = JSON.parse(error.response.body);\r\n      const message = extractErrorMessage(parsed);\r\n      if (message) {\r\n        console.log(\"Found error in parsed response.body:\", message);\r\n        return message;\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Failed to parse response.body as JSON\");\r\n    }\r\n  }\r\n  \r\n  // 6. Fallback to error.message if it's not generic\r\n  if (error?.message && \r\n      error.message !== 'Bad Request' && \r\n      error.message !== 'Network Error' &&\r\n      error.message !== 'Unauthorized' &&\r\n      error.message !== 'Forbidden' &&\r\n      error.message.trim()) {\r\n    console.log(\"Using error.message as fallback:\", error.message);\r\n    return error.message;\r\n  }\r\n  \r\n  // 7. Last resort - return default message\r\n  console.log(\"No meaningful error message found, using default\");\r\n  return defaultMessage;\r\n};\r\n\r\n/**\r\n * Clean error message by removing common prefixes\r\n * @param errorMessage - Raw error message\r\n * @returns Cleaned error message\r\n */\r\nexport const cleanErrorMessage = (errorMessage: string): string => {\r\n  return errorMessage\r\n    .replace(\"Next error(s) occurred:*\", \"\")\r\n    .replace(\"Next error(s) occurred:\", \"\")\r\n    .trim();\r\n};\r\n\r\n/**\r\n * Handle API error with automatic cleaning\r\n * @param error - The error object from API calls\r\n * @param defaultMessage - Default message to show if no specific error is found\r\n * @returns Cleaned and formatted error message string\r\n */\r\nexport const handleApiErrorWithCleanup = (error: any, defaultMessage: string = \"خطایی رخ داد. لطفا دوباره تلاش کنید.\"): string => {\r\n  const message = handleApiError(error, defaultMessage);\r\n  return cleanErrorMessage(message);\r\n};\r\n\r\n/**\r\n * Handle API error and return detailed error information including status codes\r\n * @param error - The error object from API calls\r\n * @param defaultMessage - Default message to show if no specific error is found\r\n * @returns Object containing message, status code, and other error details\r\n */\r\nexport const handleApiErrorWithDetails = (error: any, defaultMessage: string = \"خطایی رخ داد. لطفا دوباره تلاش کنید.\") => {\r\n  const message = handleApiErrorWithCleanup(error, defaultMessage);\r\n  \r\n  return {\r\n    message,\r\n    status: error?.status || error?.response?.status || null,\r\n    code: error?.code || error?.response?.code || null,\r\n    type: error?.body?.type || error?.response?.body?.type || null,\r\n    title: error?.body?.title || error?.response?.body?.title || null,\r\n    detail: error?.body?.detail || error?.response?.body?.detail || null,\r\n    body: error?.body || error?.response?.body || null,\r\n  };\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/matta/Desktop/Projects/saman-home-insurance/src/lib/openapi-config.ts"],"sourcesContent":["/**\r\n * OpenAPI configuration initializer\r\n * This module should be imported early to ensure the correct base URL is set\r\n * before any API calls are made.\r\n */\r\n\r\nimport { OpenAPI } from '@/swagger/core/OpenAPI';\r\n\r\n// Initialize OpenAPI configuration with environment variables\r\nfunction initializeOpenAPI() {\r\n  // Set base URL from environment variable, fallback to current base if not set\r\n  const baseUrl = process.env.NEXT_PUBLIC_API_URL;\r\n  \r\n  if (baseUrl) {\r\n    OpenAPI.BASE = baseUrl;\r\n    console.log('🔧 [OpenAPI] Base URL set to:', baseUrl);\r\n  } else {\r\n    console.warn('⚠️ [OpenAPI] NEXT_PUBLIC_API_URL not found, using default:', OpenAPI.BASE);\r\n  }\r\n}\r\n\r\n// Initialize immediately when this module is imported\r\ninitializeOpenAPI();\r\n\r\nexport { initializeOpenAPI };"],"names":[],"mappings":"AAAA;;;;CAIC;;;;;;;;;;AAID,8DAA8D;AAC9D,SAAS;IACP,8EAA8E;IAC9E,MAAM,UAAU,QAAQ,GAAG,CAAC,mBAAmB;IAE/C,IAAI,SAAS;QACX,QAAQ,IAAI,GAAG;QACf,QAAQ,GAAG,CAAC,iCAAiC;IAC/C,OAAO;QACL,QAAQ,IAAI,CAAC,8DAA8D,QAAQ,IAAI;IACzF;AACF;AAEA,sDAAsD;AACtD","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/matta/Desktop/Projects/saman-home-insurance/src/lib/auth.ts"],"sourcesContent":["import { AuthOptions } from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport { AuthService } from \"@/swagger/services/AuthService\";\r\nimport { handleApiErrorWithCleanup } from \"@/lib/api-error-handler\";\r\nimport { OpenAPI } from \"@/swagger/core/OpenAPI\";\r\n// Initialize OpenAPI configuration early\r\nimport \"@/lib/openapi-config\";\r\n\r\nexport const authOptions: AuthOptions = {\r\n  providers: [\r\n    CredentialsProvider({\r\n      id: \"otp-login\",\r\n      name: \"OTP Login\",\r\n      credentials: {\r\n        phoneNumber: { label: \"Phone Number\", type: \"text\" },\r\n        code: { label: \"Code\", type: \"text\" },\r\n        recaptchaToken: { label: \"ReCAPTCHA Token\", type: \"text\" },\r\n      },\r\n      async authorize(credentials) {\r\n        if (!credentials?.phoneNumber || !credentials?.code) {\r\n          throw new Error(\"شماره تلفن و کد تایید الزامی است\");\r\n        }\r\n\r\n        try {\r\n          const requestBody: any = {\r\n            phoneNumber: credentials.phoneNumber,\r\n            code: parseInt(credentials.code),\r\n          };\r\n\r\n          // Add captcha token if provided\r\n          if (credentials.recaptchaToken) {\r\n            requestBody.captchaToken = credentials.recaptchaToken;\r\n          }\r\n          const check = OpenAPI;\r\n          const response = await AuthService.petInsurancePlatformUsersEndpointsAuthLoginByCodeEndpoint({\r\n            requestBody,\r\n          });\r\n\r\n          if (response?.accessToken && response?.refreshToken && response.userId) {\r\n            return {\r\n              id: response.userId,\r\n              phoneNumber: credentials.phoneNumber,\r\n              accessToken: response.accessToken,\r\n              refreshToken: response.refreshToken,\r\n            } as const;\r\n          }\r\n          throw new Error(\"پاسخ نامعتبر از سرور\");\r\n        } catch (error) {\r\n          console.error(\"OTP login error:\", error);\r\n          const errorMessage = handleApiErrorWithCleanup(error, \"کد تایید نامعتبر است. لطفا دوباره تلاش کنید.\");\r\n          throw new Error(errorMessage);\r\n        }\r\n      },\r\n    }),\r\n    CredentialsProvider({\r\n      id: \"password-login\",\r\n      name: \"Password Login\",\r\n      credentials: {\r\n        phoneNumber: { label: \"Phone Number\", type: \"text\" },\r\n        password: { label: \"Password\", type: \"password\" },\r\n        recaptchaToken: { label: \"ReCAPTCHA Token\", type: \"text\" },\r\n      },\r\n      async authorize(credentials) {\r\n        if (!credentials?.phoneNumber || !credentials?.password) {\r\n          console.error(\"❌ [AUTH] Missing credentials for password login\");\r\n          throw new Error(\"شماره تلفن و رمز عبور الزامی است\");\r\n        }\r\n\r\n        try {\r\n          console.log(\"🔐 [AUTH] Attempting password login for:\", credentials.phoneNumber);\r\n          \r\n          const requestBody: any = {\r\n            phoneNumber: credentials.phoneNumber,\r\n            password: credentials.password,\r\n          };\r\n\r\n          // Add captcha token if provided\r\n          if (credentials.recaptchaToken) {\r\n            requestBody.captchaToken = credentials.recaptchaToken;\r\n          }\r\n\r\n          const check = OpenAPI;\r\n          const response = await AuthService.petInsurancePlatformUsersEndpointsAuthLoginByPasswordEndpoint({\r\n            requestBody,\r\n          });\r\n\r\n          console.log(\"🔐 [AUTH] Login API response received\");\r\n\r\n          if (response?.accessToken && response?.refreshToken && response.userId) {\r\n            console.log(\"✅ [AUTH] Login successful for user:\", response.userId);\r\n            return {\r\n              id: response.userId,\r\n              phoneNumber: credentials.phoneNumber,\r\n              accessToken: response.accessToken,\r\n              refreshToken: response.refreshToken,\r\n            } as const;\r\n          }\r\n          console.error(\"❌ [AUTH] Invalid response from login API:\", response);\r\n          throw new Error(\"پاسخ نامعتبر از سرور\");\r\n        } catch (error) {\r\n          console.error(\"❌ [AUTH] Password login API error:\", error);\r\n          const errorMessage = handleApiErrorWithCleanup(error, \"اطلاعات ورود نامعتبر است. لطفا دوباره تلاش کنید.\");\r\n          console.log(\"🔐 [AUTH] Throwing error:\", errorMessage);\r\n          throw new Error(errorMessage);\r\n        }\r\n      },\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      // The user object passed here contains the data returned by the authorize function\r\n      if (user) {\r\n        token.accessToken = user.accessToken;\r\n        token.refreshToken = user.refreshToken;\r\n        token.sub = user.id; // Store user ID in token\r\n        token.id = user.id;\r\n      }\r\n      return token;\r\n    },\r\n    async session({ session, token }) {\r\n      // The token object contains the data from the jwt callback\r\n      if (token) {\r\n        session.accessToken = token.accessToken;\r\n        session.refreshToken = token.refreshToken;\r\n        // Ensure user ID is available for refresh token operations\r\n        if (session.user && token.sub) {\r\n          session.user.id = token.sub;\r\n        }\r\n      }\r\n      return session;\r\n    },\r\n    async signIn({ user, account, profile, email, credentials }) {\r\n      // This callback is called when sign in succeeds\r\n      console.log(\"🔐 [AUTH CALLBACK] SignIn callback called with user:\", user);\r\n      return true; // Allow sign in\r\n    },\r\n  },\r\n  events: {\r\n    async signIn(message) {\r\n      console.log(\"🔐 [AUTH EVENT] Sign in event:\", message);\r\n    },\r\n    async signOut(message) {\r\n      console.log(\"🔐 [AUTH EVENT] Sign out event\");\r\n      \r\n      try {\r\n        // Try to get token from session first, then from token\r\n        const accessToken = message.session?.accessToken || message.token?.accessToken;\r\n        \r\n        if (accessToken) {\r\n          OpenAPI.TOKEN = accessToken;\r\n          const response = await AuthService.petInsurancePlatformUsersEndpointsAuthLogoutEndpoint();\r\n          console.log(\"🔐 [AUTH EVENT] Backend logout successful\", response);\r\n        } else {\r\n          console.log(\"🔐 [AUTH EVENT] No access token found - skipping backend logout\");\r\n        }\r\n      } catch (error: any) {\r\n        console.error(\"🔐 [AUTH EVENT] Logout API error:\", error);\r\n        // Don't throw the error - logout should succeed even if API call fails\r\n        if (error?.status === 401) {\r\n          console.log(\"🔐 [AUTH EVENT] Token expired/invalid - continuing with logout\");\r\n        }\r\n      } finally {\r\n        // Always clear the token after logout attempt\r\n        OpenAPI.TOKEN = undefined;\r\n      }\r\n    },\r\n  },\r\n  pages: {\r\n    signIn: \"/login\",\r\n  },\r\n  session: {\r\n    strategy: \"jwt\",\r\n    maxAge: 60 * 60, // 1 hour\r\n    updateAge: 24 * 60 * 60, // 24 hours\r\n  },\r\n  secret: process.env.NEXTAUTH_SECRET,\r\n}; "],"names":[],"mappings":";;;;AACA;;;;;;AAEA;;;;;;AAEA,yCAAyC;AACzC;;;;;;AAEO,MAAM,cAA2B;IACtC,WAAW;QACT,IAAA,+QAAmB,EAAC;YAClB,IAAI;YACJ,MAAM;YACN,aAAa;gBACX,aAAa;oBAAE,OAAO;oBAAgB,MAAM;gBAAO;gBACnD,MAAM;oBAAE,OAAO;oBAAQ,MAAM;gBAAO;gBACpC,gBAAgB;oBAAE,OAAO;oBAAmB,MAAM;gBAAO;YAC3D;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,eAAe,CAAC,aAAa,MAAM;oBACnD,MAAM,IAAI,MAAM;gBAClB;gBAEA,IAAI;oBACF,MAAM,cAAmB;wBACvB,aAAa,YAAY,WAAW;wBACpC,MAAM,SAAS,YAAY,IAAI;oBACjC;oBAEA,gCAAgC;oBAChC,IAAI,YAAY,cAAc,EAAE;wBAC9B,YAAY,YAAY,GAAG,YAAY,cAAc;oBACvD;oBACA,MAAM,QAAQ;oBACd,MAAM,WAAW,MAAM,YAAY,yDAAyD,CAAC;wBAC3F;oBACF;oBAEA,IAAI,UAAU,eAAe,UAAU,gBAAgB,SAAS,MAAM,EAAE;wBACtE,OAAO;4BACL,IAAI,SAAS,MAAM;4BACnB,aAAa,YAAY,WAAW;4BACpC,aAAa,SAAS,WAAW;4BACjC,cAAc,SAAS,YAAY;wBACrC;oBACF;oBACA,MAAM,IAAI,MAAM;gBAClB,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,oBAAoB;oBAClC,MAAM,eAAe,IAAA,kKAAyB,EAAC,OAAO;oBACtD,MAAM,IAAI,MAAM;gBAClB;YACF;QACF;QACA,IAAA,+QAAmB,EAAC;YAClB,IAAI;YACJ,MAAM;YACN,aAAa;gBACX,aAAa;oBAAE,OAAO;oBAAgB,MAAM;gBAAO;gBACnD,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;gBAChD,gBAAgB;oBAAE,OAAO;oBAAmB,MAAM;gBAAO;YAC3D;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,eAAe,CAAC,aAAa,UAAU;oBACvD,QAAQ,KAAK,CAAC;oBACd,MAAM,IAAI,MAAM;gBAClB;gBAEA,IAAI;oBACF,QAAQ,GAAG,CAAC,4CAA4C,YAAY,WAAW;oBAE/E,MAAM,cAAmB;wBACvB,aAAa,YAAY,WAAW;wBACpC,UAAU,YAAY,QAAQ;oBAChC;oBAEA,gCAAgC;oBAChC,IAAI,YAAY,cAAc,EAAE;wBAC9B,YAAY,YAAY,GAAG,YAAY,cAAc;oBACvD;oBAEA,MAAM,QAAQ;oBACd,MAAM,WAAW,MAAM,YAAY,6DAA6D,CAAC;wBAC/F;oBACF;oBAEA,QAAQ,GAAG,CAAC;oBAEZ,IAAI,UAAU,eAAe,UAAU,gBAAgB,SAAS,MAAM,EAAE;wBACtE,QAAQ,GAAG,CAAC,uCAAuC,SAAS,MAAM;wBAClE,OAAO;4BACL,IAAI,SAAS,MAAM;4BACnB,aAAa,YAAY,WAAW;4BACpC,aAAa,SAAS,WAAW;4BACjC,cAAc,SAAS,YAAY;wBACrC;oBACF;oBACA,QAAQ,KAAK,CAAC,6CAA6C;oBAC3D,MAAM,IAAI,MAAM;gBAClB,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,sCAAsC;oBACpD,MAAM,eAAe,IAAA,kKAAyB,EAAC,OAAO;oBACtD,QAAQ,GAAG,CAAC,6BAA6B;oBACzC,MAAM,IAAI,MAAM;gBAClB;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,mFAAmF;YACnF,IAAI,MAAM;gBACR,MAAM,WAAW,GAAG,KAAK,WAAW;gBACpC,MAAM,YAAY,GAAG,KAAK,YAAY;gBACtC,MAAM,GAAG,GAAG,KAAK,EAAE,EAAE,yBAAyB;gBAC9C,MAAM,EAAE,GAAG,KAAK,EAAE;YACpB;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,2DAA2D;YAC3D,IAAI,OAAO;gBACT,QAAQ,WAAW,GAAG,MAAM,WAAW;gBACvC,QAAQ,YAAY,GAAG,MAAM,YAAY;gBACzC,2DAA2D;gBAC3D,IAAI,QAAQ,IAAI,IAAI,MAAM,GAAG,EAAE;oBAC7B,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG;gBAC7B;YACF;YACA,OAAO;QACT;QACA,MAAM,QAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE;YACzD,gDAAgD;YAChD,QAAQ,GAAG,CAAC,wDAAwD;YACpE,OAAO,MAAM,gBAAgB;QAC/B;IACF;IACA,QAAQ;QACN,MAAM,QAAO,OAAO;YAClB,QAAQ,GAAG,CAAC,kCAAkC;QAChD;QACA,MAAM,SAAQ,OAAO;YACnB,QAAQ,GAAG,CAAC;YAEZ,IAAI;gBACF,uDAAuD;gBACvD,MAAM,cAAc,QAAQ,OAAO,EAAE,eAAe,QAAQ,KAAK,EAAE;gBAEnE,IAAI,aAAa;oBACf,QAAQ,KAAK,GAAG;oBAChB,MAAM,WAAW,MAAM,YAAY,oDAAoD;oBACvF,QAAQ,GAAG,CAAC,6CAA6C;gBAC3D,OAAO;oBACL,QAAQ,GAAG,CAAC;gBACd;YACF,EAAE,OAAO,OAAY;gBACnB,QAAQ,KAAK,CAAC,qCAAqC;gBACnD,uEAAuE;gBACvE,IAAI,OAAO,WAAW,KAAK;oBACzB,QAAQ,GAAG,CAAC;gBACd;YACF,SAAU;gBACR,8CAA8C;gBAC9C,QAAQ,KAAK,GAAG;YAClB;QACF;IACF;IACA,OAAO;QACL,QAAQ;IACV;IACA,SAAS;QACP,UAAU;QACV,QAAQ,KAAK;QACb,WAAW,KAAK,KAAK;IACvB;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC","debugId":null}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/matta/Desktop/Projects/saman-home-insurance/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport \"../styles/datepicker.css\";\nimport { Providers } from \"@/components/session-provider\";\nimport localFont from \"next/font/local\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/lib/auth\";\n\nconst iranSans = localFont({\n  src: [\n    {\n      path: \"../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum)_Black.woff2\",\n      weight: \"900\",\n      style: \"normal\",\n    },\n    {\n      path: \"../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum)_Bold.woff2\",\n      weight: \"700\",\n      style: \"normal\",\n    },\n    {\n      path: \"../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum)_Medium.woff2\",\n      weight: \"500\",\n      style: \"normal\",\n    },\n    {\n      path: \"../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum)_Light.woff2\",\n      weight: \"300\",\n      style: \"normal\",\n    },\n    {\n      path: \"../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum)_UltraLight.woff2\",\n      weight: \"200\",\n      style: \"normal\",\n    },\n    {\n      path: \"../assets/font/IRANSans/fonts/woff2/IRANSansWeb(FaNum).woff2\",\n      weight: \"400\",\n      style: \"normal\",\n    },\n  ],\n  preload: true,\n  display: \"swap\",\n});\n\nexport const metadata: Metadata = {\n  title: \"بیمه سامان\",\n  description: \"بیمه منازل مسکونی\",\n};\n\nexport default async function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  let session;\n\n  try {\n    session = await getServerSession(authOptions);\n  } catch (error) {\n    // Handle error gracefully - possibly a logout or auth error\n    console.log(\"Session error:\", error);\n    session = null;\n  }\n  return (\n    <html lang=\"fa\" dir=\"rtl\" suppressHydrationWarning>\n      <body className={iranSans.className}>\n        <Providers session={session}>{children}</Providers>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAIA;;AAEA;AACA;;;;;;;;AAuCO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,eAAe,WAAW,EACvC,QAAQ,EAGR;IACA,IAAI;IAEJ,IAAI;QACF,UAAU,MAAM,IAAA,qQAAgB,EAAC,iIAAW;IAC9C,EAAE,OAAO,OAAO;QACd,4DAA4D;QAC5D,QAAQ,GAAG,CAAC,kBAAkB;QAC9B,UAAU;IACZ;IACA,qBACE,6WAAC;QAAK,MAAK;QAAK,KAAI;QAAM,wBAAwB;kBAChD,cAAA,6WAAC;YAAK,WAAW,0IAAQ,CAAC,SAAS;sBACjC,cAAA,6WAAC,sJAAS;gBAAC,SAAS;0BAAU;;;;;;;;;;;;;;;;AAItC","debugId":null}}]
}