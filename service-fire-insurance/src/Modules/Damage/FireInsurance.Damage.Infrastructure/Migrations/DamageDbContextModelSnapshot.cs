// <auto-generated />
using System;
using System.Collections.Generic;
using FireInsurance.Damage.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FireInsurance.Damage.Infrastructure.Migrations
{
    [DbContext(typeof(DamageDbContext))]
    partial class DamageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("damage")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FireInsurance.Damage.Domain.Entities.DamageClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.PrimitiveCollection<List<Guid>>("FileIds")
                        .HasColumnType("uuid[]")
                        .HasColumnName("file_ids");

                    b.Property<Guid?>("IncidentId")
                        .HasColumnType("uuid")
                        .HasColumnName("incident_id");

                    b.Property<Guid?>("OwnershipTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("ownership_type_id");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("phone_number");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("serial_number");

                    b.Property<Guid?>("StakeHolderId")
                        .HasColumnType("uuid")
                        .HasColumnName("stake_holder_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_damage_claims");

                    b.ToTable("damage_claims", "damage");
                });

            modelBuilder.Entity("FireInsurance.Damage.Domain.Entities.DamageClaim", b =>
                {
                    b.OwnsOne("FireInsurance.Damage.Domain.Entities.Insurer", "Insurer", b1 =>
                        {
                            b1.Property<Guid>("DamageClaimId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("character varying(1000)")
                                .HasColumnName("insurer_first_name");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("character varying(1000)")
                                .HasColumnName("insurer_last_name");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("character varying(1000)")
                                .HasColumnName("insurer_phone_number");

                            b1.HasKey("DamageClaimId");

                            b1.ToTable("damage_claims", "damage");

                            b1.WithOwner()
                                .HasForeignKey("DamageClaimId")
                                .HasConstraintName("fk_damage_claims_damage_claims_id");
                        });

                    b.Navigation("Insurer")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
